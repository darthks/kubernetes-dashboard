---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: {{ .Release.Name }}
  name: {{ .Release.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
          ports:
            - containerPort: {{ .Values.ports.app }}
              protocol: TCP
          args:
            - --namespace={{ .Release.Namespace }}
            - --enable-insecure-login
          # Uncomment the following line to manually specify Kubernetes API server Host
          # If not specified, Dashboard will attempt to auto discover the API server and connect
          # to it. Uncomment only if the default does not work.
          # - --apiserver-host=http://my-address:port
          {{- if .Values.customAppArguments }}
          ###
          ### custom arguments below
          ###
          {{- range $arg := .Values.customAppArguments }}
            - {{ $arg }}
          {{- end }}
          {{- end }}
          volumeMounts:
            # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.ports.app }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: {{ .Release.Name }}
      nodeSelector:
        "kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: {{ .Release.Name }}-metrics-scraper
  name: {{ .Release.Name }}-metrics-scraper
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}-metrics-scraper
  template:
    metadata:
      labels:
        k8s-app: {{ .Release.Name }}-metrics-scraper
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
    spec:
      containers:
        - name: {{ .Release.Name }}-metrics-scraper
          image: {{ .Values.dashboardMetricsScraperImage.repo}}:{{ .Values.dashboardMetricsScraperImage.tag }}
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: {{ .Release.Name }}
      nodeSelector:
        "kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: tmp-volume
          emptyDir: {}